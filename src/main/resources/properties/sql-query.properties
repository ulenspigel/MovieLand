sql.movie.all=select * from ml.t_movie tm
sql.movie.byId=select * from ml.t_movie where movie_id = ?
sql.movie.insert=insert into ml.t_movie(movie_title, original_title, year, description, rating, price) values (?, ?, ?, ?, ?, ?)
sql.movie.update=update ml.t_movie set #set_clause# where movie_id = ?
sql.movie.addGenre=insert into ml.t_movie_genre(movie_id, genre_id) values (?, ?)
sql.movie.deleteGenres=delete from ml.t_movie_genre where movie_id = ?
sql.movie.addCountry=insert into ml.t_movie_country(movie_id, country_id) values (?, ?)
sql.movie.deleteCountries=delete from ml.t_movie_country where movie_id = ?
sql.genre.forMovie=select gr.* from ml.t_movie_genre mg join ml.t_genre gr on mg.genre_id = gr.genre_id where mg.movie_id = ?
sql.genre.allMovies=select mg.movie_id, tg.genre_id, tg.genre_name from ml.t_movie_genre mg join ml.t_genre tg on mg.genre_id = tg.genre_id order by movie_id
sql.genre.byName=select genre_id, genre_name from ml.t_genre where genre_name = ?
sql.genre.add=insert into ml.t_genre(genre_name) values (?)
sql.country.forMovie=select tc.* from ml.t_movie_country mc join ml.t_country tc on mc.country_id = tc.country_id where mc.movie_id = ?
sql.country.byName=select country_id, country_name from ml.t_country where country_name = ?
sql.country.add=insert into ml.t_country(country_name) values (?)
sql.review.forMovie.limited=select rv.* from ml.t_review rv where rv.movie_id = ? limit ?
sql.review.insert=insert into ml.t_review(user_id, movie_id, text) values (?, ?, ?)
sql.review.byId=select * from ml.t_review where review_id = ?
sql.review.delete=delete from ml.t_review where review_id = ?
sql.movie.genreSubRequest=exists (select null from ml.t_movie_genre mg join ml.t_genre tg on mg.genre_id = tg.genre_id where mg.movie_id = tm.movie_id and tg.genre_name = ?)
sql.movie.countrySubRequest=exists (select null from ml.t_movie_country mc join ml.t_country tc on mc.country_id = tc.country_id where mc.movie_id = tm.movie_id and tc.country_name = ?)
sql.user.byCredentials=select user_id, display_name, email, is_admin from ml.t_user where upper(email) = upper(?) and password = ?